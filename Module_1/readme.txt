Module_1_1
Практическое задание по работе в Pycharm - "Переменные".
Цель: научиться правильно называть переменные и взаимодействовать с ними.

Написать 4 переменных которые будут обозначать следующие данные:
1. Количество выполненных ДЗ (запишите значение 12).
2. Количество затраченных часов (запишите значение 1.5).
3. Название курса (запишите значение 'Python').
4. Время на одно задание (вычислить используя 1 и 2 переменные).
Вывести на экран (в консоль), используя переменные, следующую строку:
Курс: Python, всего задач: 12, затрачено часов: 1.5, среднее время выполнения: 0.125 часа.

Примечания:
1. Для вывода значений на экран используйте функцию print(a, b, c), где a, b, c - данные которые выводятся на экран.
2. Для названия переменных используйте только: латинские буквы, не начинайте запись с числа, пишите в змеином регистре (разделяя слова символом '_').
3. Пробелы между словами и символами ':' ',' можно ставить на своё усмотрение.


Module_1_2
Практическое задание по уроку "Строки и индексация строк".
Цель: Научиться работать со строками и индексацией строк в Python.

1. В переменную example записать любую строку.
2. Вывести на экран (в консоль) первый символ этой строки.
3. Вывести на экран (в консоль) последний символ этой строки (используя отрицательный индекс).
4. Вывести на экран (в консоль) вторую половину этой строки (c нечётным количеством символов: 'Urban' -> 'ban').
5. Вывести на экран (в консоль) это слово наоборот.
6. Вывести на экран (в консоль) каждый второй символ этой строки. (Пример: 'Топинамбур'->'оиабр').

Вводные данные:
example = 'Топинамбур'

Вывод на экран(в консоль):
Т
р
амбур
рубманипоТ
оиабр


Module_1_3
Практическая работа по уроку "Динамическая типизация".

1. Создать переменные разных типов данных:
2. Создать переменную name и присвойте ей значение вашего имени (строка).
3. Вывести значение переменной name на экран.
4. Создать переменную age и присвойте ей значение вашего возраста (целое число).
5. Вывести значение переменной age на экран.
6. Перезаписать в age текущее значение переменной age + новое.
Как неверно (просто перезапись на новое число):
a = 15
a = 17
7. Вывести изменённое значение переменной age на экран.
8. Создать переменную is_student и присвойте ей значение True (логическое значение).
9. Вывести значение переменной is_student на экран.

Пример результата выполнения программы:
Name: John
Age: 25
New Age: 26
Is Student: True


Module_1_4
Практическая работа по уроку "Организация программ и методы строк".
Цель: Написать программу на языке Python с использованием Pycharm для работы с методами строк и организации программ.

1. Создать переменную my_string и присвоить ей значение строки с произвольным текстом (функция input()).
2. Вывести количество символов введённого текста.
Используя методы строк, выполнить следующие действия:
3. Вывести строку my_string в верхнем регистре.
4. Вывести строку my_string в нижнем регистре.
5. Изменить строку my_string, удалив все пробелы.
6. Вывести первый символ строки my_string.
7. Вывести последний символ строки my_string.


Module_1_5
Практическое задание по теме: "Неизменяемые и изменяемые объекты. Кортежи и списки".

Цель: написать программу на языке Python, используя Pycharm, для работы с неизменяемыми и изменяемыми объектами.

Задать переменные разных типов данных:
1. Создать переменную immutable_var и присвоить ей кортеж из нескольких элементов разных типов данных.
2. Выполнить операцию вывода кортежа immutable_var на экран.

Изменение значений переменных:
3. Попытаться изменить элементы кортежа immutable_var. Объяснить, почему нельзя изменить значения элементов кортежа.

Создание изменяемых структур данных:
4. Создать переменную mutable_list и присвоить ей список из нескольких элементов.
5. Изменить элементы списка mutable_list.
6. Вывести на экран измененный список mutable_list.

Пример результата выполнения программы:
Immutable tuple: (1, 2, 'a', 'b')
Mutable list: [1, 2, 'a', 'b', 'Modified']


Module_1_6
Практическое задание по теме: "Словари и множества".

Цель: написать программу на языке Python, используя Pycharm, для работы со словарями и множествами.
Работа со словарями:
1. Создать переменную my_dict и присвойте ей словарь из нескольких пар ключ-значение. Например: Имя(str)-Год рождения(int).
2. Вывести на экран словарь my_dict.
3. Вывести на экран одно значение по существующему ключу, одно по отсутствующему из словаря my_dict без ошибки.
4. Добавить ещё две произвольные пары того же формата в словарь my_dict.
5. Удалить одну из пар в словаре по существующему ключу из словаря my_dict и вывести значение из этой пары на экран.
6. Вывести на экран словарь my_dict.
Работа с множествами:
1. Создать переменную my_set и присвойте ей множество, состоящее из разных типов данных с повторяющимися значениями.
2. Вывести на экран множество my_set (должны отобразиться только уникальные значения).
3. Добавить 2 произвольных элемента в множество my_set, которых ещё нет.
4. Удалить один любой элемент из множества my_set.
5. Вывести на экран измененное множество my_set.

Пример результата выполнения программы:
Dict: {'Vasya': 1975, 'Egor': 1999, 'Masha': 2002}
Existing value: 2002
Not existing value: None
Deleted value: 1999
Modified dictionary: {'Vasya': 1975, 'Kamila': 1981, 'Artem': 1915, 'Masha': 2002}

Set: {1, 'Яблоко', 42.314}
Modified set: {'Яблоко', 42.314, 13, (5, 6, 1.6)}


Module_1_hard
Дополнительное практическое задание по модулю: "Базовые структуры данных".
Цель: Применить знания полученные в модуле, решив задачу повышенного уровня сложности.

Задание "Средний балл".
Вам необходимо решить задачу из реальной жизни: "школьные учителя устали подсчитывать вручную средний балл каждого ученика, поэтому вам предстоит автоматизировать этот процесс".
На вход даны следующие данные:
1. Список: grades = [[5, 3, 3, 5, 4], [2, 2, 2, 3], [4, 5, 5, 2], [4, 4, 3], [5, 5, 5, 4, 5]]
2. Множество: students = {'Johnny', 'Bilbo', 'Steve', 'Khendrik', 'Aaron'}
Список grades содержит списки оценок для каждого ученика в алфавитном порядке.
Например: 'Aaron' - [5, 3, 3, 5, 4]
Множество students содержит неупорядоченную последовательность имён всех учеников в классе.
Напишите программу, которая составляет словарь, используя grades и students, где ключом будет имя ученика, а значением - его средний балл.

Вывод в консоль:
{'Aaron': 4.0, 'Bilbo': 2.25, 'Johhny': 4.0, 'Khendrik': 3.6666666666666665, 'Steve': 4.8}

Примечания:
1. Самостоятельно составлять (вручную) словарь не нужно (только изначально пустой).
2. Для решения задачи нужно вспомнить функции sum, len и др. (подумать самому).
3. Помните, что множество не является упорядоченной последовательностью. (нужен перевод в другой тип).